// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ratings {
  id           Int      @id @default(autoincrement())
  courseRating Int
  workload     Int
  lecture      Int
  difficulty   Int
  annoyance    Int
  Reviews      Reviews? @relation(fields: [reviewsId], references: [id])
  reviewsId    Int?
}

model Reviews {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  title       String
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  reviewText  String
  ratings     Ratings[]
  Course      Course?       @relation(fields: [courseId], references: [id])
  courseId    Int?
  courseEvals CourseEvals[]
}

model CourseEvals {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  link      String
  Reviews   Reviews? @relation(fields: [reviewsId], references: [id])
  reviewsId Int?
}

model Course {
  id         Int       @id @default(autoincrement())
  courseName String
  courseId   String    @unique
  courseSite String
  reviews    Reviews[]
}

model User {
  id       Int       @id @default(autoincrement())
  // email    String    @unique
  name     String?
  // password String?
  // role     Role      @default(USER)
  reviews  Reviews[]
}

enum Role {
  USER
  ADMIN
}
